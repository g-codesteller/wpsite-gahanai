version: "3" 
# Defines which compose version to use
services:
  # Services line define which Docker images to run. In this case, it will be MySQL server and WordPress image.
  db:
    image: mysql:8.0
    # image: mysql:latest indicates the MySQL database container image from Docker Hub used in this installation.
    restart: unless-stopped
    container_name: db
    env_file: .env
    environment:
      - MYSQL_DATABASE=GahanAIWordPressDB
    volumes: 
      - dbdata:/var/lib/mysql
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - app-network
      # Previous four lines define the main variables needed for the MySQL container to work: database, database username, database user password, and the MySQL root password.
  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    container_name: wordpress
    restart: unless-stopped
    env_file: .env
    # # Restart line controls the restart mode, meaning if the container stops running for any reason, it will restart the process immediately.
    # ports:
    #   - "8000:80"
    # The previous line defines the port that the WordPress container will use. After successful installation, the full path will look like this: http://localhost:8000
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=GahanAIWordPressDB
# Similar to MySQL image variables, the last four lines define the main variables needed for the WordPress container to work properly with the MySQL container.
    volumes:
      - wordpress:/var/www/html
    networks:
      - app-network
  webserver:
    depends_on:
      - wordpress
    image: nginx:1.15.12-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - wordpress:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
    networks:
      - app-network
  certbot:
    depends_on:
      - webserver
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - wordpress:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email pallab.maji@ayushdox.com --agree-tos --no-eff-email --force-renewal -d ayushdox.com -d www.ayushdox.com
volumes:
  certbot-etc:
  certbot-var:
  wordpress:
  dbdata:
networks:
  app-network:
    driver: bridge
